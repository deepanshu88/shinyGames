server <- function(input, output, session) { }
shinyApp(ui, server)
library(shinyGames)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
game(type = input$gameid)
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage( game(type = "corona") )
server <- function(input, output, session) { }
shinyApp(ui, server)
system.file("assets/corona", package = "shinyGames"), "/game2.html")
paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html")
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
game(type = input$gameid)
})
}
shinyApp(ui, server)
paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html")
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
game(type = input$gameid)
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
game(type = input$gameid)
})
}
shinyApp(ui, server)
library(shinyGames)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
game(type = input$gameid)
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(length(input$gameid) > 0) { game(type = input$gameid) }
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(length(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
})
observe({ print(length(input$gameid)) })
}
shinyApp(ui, server)
nchar("as")
nchar("")
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
shiny::selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
})
}
shinyApp(ui, server)
# library(shiny)
# library(shinyGames)
#
# ui <- fluidPage(
#   shiny::selectizeInput("gameid", "Select Game",
#                         choices = c("corona", "dino"),
#                         options = list(
#                        placeholder = 'Please select an option below',
#                        onInitialize = I('function() { this.setValue(""); }')
#                      )),
#
#   uiOutput("myout")
#
#   )
#
# server <- function(input, output, session) {
#
#   output$myout <- renderUI({
#
#     if(nchar(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
#
#   })
#
#
# }
#
# shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage( game(type = "corona") )
server <- function(input, output, session) { }
shinyApp(ui, server)
# library(shiny)
# library(shinyGames)
#
# ui <- fluidPage(
#   shiny::selectizeInput("gameid", "Select Game",
#                         choices = c("corona", "dino"),
#                         options = list(
#                        placeholder = 'Please select an option below',
#                        onInitialize = I('function() { this.setValue(""); }')
#                      )),
#
#   uiOutput("myout")
#
#   )
#
# server <- function(input, output, session) {
#
#   output$myout <- renderUI({
#
#     if(nchar(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
#
#   })
#
#
# }
#
# shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage( game(type = "dino") )
server <- function(input, output, session) { }
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) { game(type = input$gameid) } else {NULL}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
htmltools::includeHTML(paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html"))
)
server <- function(input, output, session) { }
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage(
tags$div(id = "shinyGamesid" ,
htmltools::includeHTML(paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html"))
)
)
server <- function(input, output, session) { }
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
tags$div(id = "shinyGamesid" ,
htmltools::includeHTML(paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html"))
),
actionButton("mybtn", "Test")
)
server <- function(input, output, session) {
runjs('$("#mybtn").click(function() {
$("div#shinyGamesid").remove();
});
')
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
actionButton("mybtn", "Test"),
tags$div(id = "shinyGamesid" ,
htmltools::includeHTML(paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html"))
)
)
server <- function(input, output, session) {
runjs('$("#mybtn").click(function() {
$("div#shinyGamesid").remove();
});
')
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
actionButton("mybtn", "Test"),
tags$div(id = "shinyGamesid" ,
htmltools::includeHTML(paste0(system.file("assets/corona", package = "shinyGames"), "/game2.html"))
)
)
server <- function(input, output, session) {
runjs('$("#mybtn").click(function() {
$("div#shinyGamesid").remove();
});
')
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) {
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove();});')
game(type = input$gameid)
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) {
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove();});')
tags$div(id = "shinyGamesid", game(type = input$gameid) )
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
tags$div(id = "shinyGamesid", game(type = input$gameid)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) {
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove(); });')
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
tags$div(id = "shinyGamesid", game()),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) {
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove(); });')
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
tags$div(id = "shinyGamesid", game()),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove(); });')
if(nchar(input$gameid) > 0) {
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
runjs('$("#gameid").change(function() { $("div#shinyGamesid").remove(); });')
if(nchar(input$gameid) > 0) {
tags$div(id = "shinyGamesid", game(type = input$gameid))
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
runjs('$("#gameid").change(function() { $("#shinyGamesid").remove(); });')
if(nchar(input$gameid) > 0) {
tags$div(id = "shinyGamesid", game(type = input$gameid))
}
})
}
shinyApp(ui, server)
runApp('R/example.R')
library(shiny)
library(shinyGames)
library(shinyjs)
ui <- fluidPage(
selectizeInput("gameid", "Select Game",
choices = c("corona", "dino"),
options = list(
placeholder = 'Please select an option below',
onInitialize = I('function() { this.setValue(""); }')
)),
uiOutput("myout")
)
server <- function(input, output, session) {
output$myout <- renderUI({
if(nchar(input$gameid) > 0) {
game(type = input$gameid)
}
})
}
shinyApp(ui, server)
detach("package:shinyGames", unload = TRUE)
remove.packages("shinyGames", lib="~/R/win-library/3.6")
library(shinyGames)
library(shiny); runApp('inst/example.R')
library(shinyGames)
runApp('inst/example.R')
runApp('inst/example.R')
library(shinyGames)
runApp('inst/example.R')
library(shiny)
library(shinyGames)
ui <- fluidPage( game(type = "corona") )
server <- function(input, output, session) { }
shinyApp(ui, server)
library(shiny)
library(shinyGames)
ui <- fluidPage( game(type = "diano") )
server <- function(input, output, session) { }
shinyApp(ui, server)
library(shinyGames)
runApp('inst/example.R')
library(shinyGames)
runApp('inst/example.R')
